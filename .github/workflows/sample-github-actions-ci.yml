name: Build and Deploy Frontend & Backend

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Frontend Image
        run: |
          docker build -t wesley_goyette/pet-adoption-frontend:latest -f ./docker/pet-adoption-frontend.Dockerfile .

      - name: Build Backend Image
        run: |
          docker build -t wesley_goyette/pet-adoption-api:latest -f ./docker/pet-adoption-api.Dockerfile .
        
      - name: Start Frontend Container
        run: |
          docker run -d --name pet-adoption-frontend -p 3000:3000 wesley_goyette/pet-adoption-frontend:latest

      - name: Start Backend Container
        run: |
          docker run -d --name pet-adoption-backend -p 8080:8080 wesley_goyette/pet-adoption-api:latest

    # how Brendon would do this:
    # In your production.docker-compose.yml, instead of doing this push/pull this, 
    # you can actually point to Docker files and have it build them when you run docker compose up --build
    # That way, you can get rid off all other steps but "Deploy to Production".
    # Relevant link: https://docs.docker.com/reference/compose-file/build/